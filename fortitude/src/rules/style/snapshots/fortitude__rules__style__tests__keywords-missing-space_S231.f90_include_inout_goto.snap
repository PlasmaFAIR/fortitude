---
source: fortitude/src/rules/style/mod.rs
expression: diagnostics
snapshot_kind: text
---
./resources/test/fixtures/style/S231.f90:4:1: S231 [*] Missing space in 'endfunction'
  |
2 |   integer, intent(in) :: x
3 |   y = x
4 | endfunction f
  | ^^^^^^^^^^^ S231
5 |
6 | module m
  |
  = help: Replace with 'end function'

ℹ Safe fix
1 1 | integer function f(x) result(y)
2 2 |   integer, intent(in) :: x
3 3 |   y = x
4   |-endfunction f
  4 |+end function f
5 5 | 
6 6 | module m
7 7 |   implicit none

./resources/test/fixtures/style/S231.f90:31:3: S231 [*] Missing space in 'endtype'
   |
29 |   type, extends(point_2d) :: point_3d
30 |     real :: z
31 |   endtype point_3d
   |   ^^^^^^^ S231
32 |
33 |   enum, bind(c)
   |
   = help: Replace with 'end type'

ℹ Safe fix
28 28 | 
29 29 |   type, extends(point_2d) :: point_3d
30 30 |     real :: z
31    |-  endtype point_3d
   31 |+  end type point_3d
32 32 | 
33 33 |   enum, bind(c)
34 34 |     enumerator :: a = 1

./resources/test/fixtures/style/S231.f90:39:3: S231 [*] Missing space in 'endenum'
   |
37 |   enum, bind(c)
38 |     enumerator :: b = 2
39 |   EndEnum
   |   ^^^^^^^ S231
40 |
41 | contains
   |
   = help: Replace with 'end enum'

ℹ Safe fix
36 36 | 
37 37 |   enum, bind(c)
38 38 |     enumerator :: b = 2
39    |-  EndEnum
   39 |+  End Enum
40 40 | 
41 41 | contains
42 42 |   integer function f1(x, y)

./resources/test/fixtures/style/S231.f90:43:21: S231 [*] Missing space in 'inout'
   |
41 | contains
42 |   integer function f1(x, y)
43 |     integer, intent(inoUt) :: x
   |                     ^^^^^ S231
44 |     integer, intent(in out) :: y
45 |     select case (x)
   |
   = help: Replace with 'in out'

ℹ Safe fix
40 40 | 
41 41 | contains
42 42 |   integer function f1(x, y)
43    |-    integer, intent(inoUt) :: x
   43 |+    integer, intent(in oUt) :: x
44 44 |     integer, intent(in out) :: y
45 45 |     select case (x)
46 46 |       case(1)

./resources/test/fixtures/style/S231.f90:51:5: S231 [*] Missing space in 'selectcase'
   |
49 |         print *, y
50 |     end select
51 |     selectcase (y)
   |     ^^^^^^^^^^ S231
52 |       case(1)
53 |         f1 = y
   |
   = help: Replace with 'select case'

ℹ Safe fix
48 48 |       case default
49 49 |         print *, y
50 50 |     end select
51    |-    selectcase (y)
   51 |+    select case (y)
52 52 |       case(1)
53 53 |         f1 = y
54 54 |       case default

./resources/test/fixtures/style/S231.f90:56:5: S231 [*] Missing space in 'endselect'
   |
54 |       case default
55 |         f1 = x
56 |     endselect
   |     ^^^^^^^^^ S231
57 |   end function f1
   |
   = help: Replace with 'end select'

ℹ Safe fix
53 53 |         f1 = y
54 54 |       case default
55 55 |         f1 = x
56    |-    endselect
   56 |+    end select
57 57 |   end function f1
58 58 | 
59 59 |   integer function f2(x)

./resources/test/fixtures/style/S231.f90:67:5: S231 [*] Missing space in 'endblock'
   |
65 |     block_name: block
66 |       integer :: k
67 |     endblock block_name
   |     ^^^^^^^^ S231
68 |     print *, "x"
69 |     f2 = x
   |
   = help: Replace with 'end block'

ℹ Safe fix
64 64 |     end block
65 65 |     block_name: block
66 66 |       integer :: k
67    |-    endblock block_name
   67 |+    end block block_name
68 68 |     print *, "x"
69 69 |     f2 = x
70 70 |   endfunction f2

./resources/test/fixtures/style/S231.f90:70:3: S231 [*] Missing space in 'endfunction'
   |
68 |     print *, "x"
69 |     f2 = x
70 |   endfunction f2
   |   ^^^^^^^^^^^ S231
71 |
72 |   subroutine s1()
   |
   = help: Replace with 'end function'

ℹ Safe fix
67 67 |     endblock block_name
68 68 |     print *, "x"
69 69 |     f2 = x
70    |-  endfunction f2
   70 |+  end function f2
71 71 | 
72 72 |   subroutine s1()
73 73 |     integer, parameter :: N = 3

./resources/test/fixtures/style/S231.f90:84:7: S231 [*] Missing space in 'endforall'
   |
82 |       forall(i = 1:N, j = 1:N, i /= j)
83 |         A(i, j) = 0.0
84 |       endforall
   |       ^^^^^^^^^ S231
85 |     endassociate named_associate
86 |     print *, A
   |
   = help: Replace with 'end forall'

ℹ Safe fix
81 81 |     named_associate: associate(A => matrix)
82 82 |       forall(i = 1:N, j = 1:N, i /= j)
83 83 |         A(i, j) = 0.0
84    |-      endforall
   84 |+      end forall
85 85 |     endassociate named_associate
86 86 |     print *, A
87 87 |   end subroutine s1

./resources/test/fixtures/style/S231.f90:85:5: S231 [*] Missing space in 'endassociate'
   |
83 |         A(i, j) = 0.0
84 |       endforall
85 |     endassociate named_associate
   |     ^^^^^^^^^^^^ S231
86 |     print *, A
87 |   end subroutine s1
   |
   = help: Replace with 'end associate'

ℹ Safe fix
82 82 |       forall(i = 1:N, j = 1:N, i /= j)
83 83 |         A(i, j) = 0.0
84 84 |       endforall
85    |-    endassociate named_associate
   85 |+    end associate named_associate
86 86 |     print *, A
87 87 |   end subroutine s1
88 88 | 

./resources/test/fixtures/style/S231.f90:98:5: S231 [*] Missing space in 'selecttype'
    |
 96 |         print *, ptr%x, ptr%y
 97 |     end select
 98 |     selecttype(ptr)
    |     ^^^^^^^^^^ S231
 99 |       type is(point_3d) ! only trigger for 3d
100 |         print *, ptr%x, ptr%y, ptr%z
    |
    = help: Replace with 'select type'

ℹ Safe fix
95 95 |       class is (point_2d) ! should trigger for either
96 96 |         print *, ptr%x, ptr%y
97 97 |     end select
98    |-    selecttype(ptr)
   98 |+    select type(ptr)
99 99 |       type is(point_3d) ! only trigger for 3d
100 100 |         print *, ptr%x, ptr%y, ptr%z
101 101 |     endselect

./resources/test/fixtures/style/S231.f90:101:5: S231 [*] Missing space in 'endselect'
    |
 99 |       type is(point_3d) ! only trigger for 3d
100 |         print *, ptr%x, ptr%y, ptr%z
101 |     endselect
    |     ^^^^^^^^^ S231
102 |   endsubroutine s2
    |
    = help: Replace with 'end select'

ℹ Safe fix
98  98  |     selecttype(ptr)
99  99  |       type is(point_3d) ! only trigger for 3d
100 100 |         print *, ptr%x, ptr%y, ptr%z
101     |-    endselect
    101 |+    end select
102 102 |   endsubroutine s2
103 103 | 
104 104 | end module m

./resources/test/fixtures/style/S231.f90:102:3: S231 [*] Missing space in 'endsubroutine'
    |
100 |         print *, ptr%x, ptr%y, ptr%z
101 |     endselect
102 |   endsubroutine s2
    |   ^^^^^^^^^^^^^ S231
103 |
104 | end module m
    |
    = help: Replace with 'end subroutine'

ℹ Safe fix
99  99  |       type is(point_3d) ! only trigger for 3d
100 100 |         print *, ptr%x, ptr%y, ptr%z
101 101 |     endselect
102     |-  endsubroutine s2
    102 |+  end subroutine s2
103 103 | 
104 104 | end module m
105 105 | 

./resources/test/fixtures/style/S231.f90:125:7: S231 [*] Missing space in 'endcritical'
    |
123 |       critical
124 |         total = total + this
125 |       endcritical
    |       ^^^^^^^^^^^ S231
126 |       sync all
127 |     endteam
    |
    = help: Replace with 'end critical'

ℹ Safe fix
122 122 |     change team(team_id)
123 123 |       critical
124 124 |         total = total + this
125     |-      endcritical
    125 |+      end critical
126 126 |       sync all
127 127 |     endteam
128 128 |   end function coarray_stuff

./resources/test/fixtures/style/S231.f90:127:5: S231 [*] Missing space in 'endteam'
    |
125 |       endcritical
126 |       sync all
127 |     endteam
    |     ^^^^^^^ S231
128 |   end function coarray_stuff
129 | endmodule m2
    |
    = help: Replace with 'end team'

ℹ Safe fix
124 124 |         total = total + this
125 125 |       endcritical
126 126 |       sync all
127     |-    endteam
    127 |+    end team
128 128 |   end function coarray_stuff
129 129 | endmodule m2
130 130 | 

./resources/test/fixtures/style/S231.f90:129:1: S231 [*] Missing space in 'endmodule'
    |
127 |     endteam
128 |   end function coarray_stuff
129 | endmodule m2
    | ^^^^^^^^^ S231
130 |
131 | submodule (m) s1
    |
    = help: Replace with 'end module'

ℹ Safe fix
126 126 |       sync all
127 127 |     endteam
128 128 |   end function coarray_stuff
129     |-endmodule m2
    129 |+end module m2
130 130 | 
131 131 | submodule (m) s1
132 132 |   implicit none

./resources/test/fixtures/style/S231.f90:135:3: S231 [*] Missing space in 'endprocedure'
    |
133 | contains
134 |   module procedure procedure_1
135 |   endprocedure procedure_1
    |   ^^^^^^^^^^^^ S231
136 |   integer function submodule_f1(x)
137 |     integer, intent(in) :: x
    |
    = help: Replace with 'end procedure'

ℹ Safe fix
132 132 |   implicit none
133 133 | contains
134 134 |   module procedure procedure_1
135     |-  endprocedure procedure_1
    135 |+  end procedure procedure_1
136 136 |   integer function submodule_f1(x)
137 137 |     integer, intent(in) :: x
138 138 |     submodule_f1 = x

./resources/test/fixtures/style/S231.f90:151:1: S231 [*] Missing space in 'endsubmodule'
    |
149 |     submodule_f2 = x
150 |   end function submodule_f2
151 | endSubmodule s2
    | ^^^^^^^^^^^^ S231
152 |
153 | program p
    |
    = help: Replace with 'end submodule'

ℹ Safe fix
148 148 |     integer, intent(in) :: x
149 149 |     submodule_f2 = x
150 150 |   end function submodule_f2
151     |-endSubmodule s2
    151 |+end Submodule s2
152 152 | 
153 153 | program p
154 154 |   use :: m, only: s1, s2, point_2d, point_3d

./resources/test/fixtures/style/S231.f90:159:3: S231 [*] Missing space in 'doubleprecision'
    |
157 |   double precision :: A(n)
158 |   double complex :: b
159 |   DoublePrecision :: c
    |   ^^^^^^^^^^^^^^^ S231
160 |   DoubleComplex :: d
161 |   integer :: i, j, k
    |
    = help: Replace with 'double precision'

ℹ Safe fix
156 156 |   integer, parameter :: n = 10
157 157 |   double precision :: A(n)
158 158 |   double complex :: b
159     |-  DoublePrecision :: c
    159 |+  Double Precision :: c
160 160 |   DoubleComplex :: d
161 161 |   integer :: i, j, k
162 162 |   type(point_2d) :: p2d

./resources/test/fixtures/style/S231.f90:160:3: S231 [*] Missing space in 'doublecomplex'
    |
158 |   double complex :: b
159 |   DoublePrecision :: c
160 |   DoubleComplex :: d
    |   ^^^^^^^^^^^^^ S231
161 |   integer :: i, j, k
162 |   type(point_2d) :: p2d
    |
    = help: Replace with 'double complex'

ℹ Safe fix
157 157 |   double precision :: A(n)
158 158 |   double complex :: b
159 159 |   DoublePrecision :: c
160     |-  DoubleComplex :: d
    160 |+  Double Complex :: d
161 161 |   integer :: i, j, k
162 162 |   type(point_2d) :: p2d
163 163 |   type(point_3d) :: p3d

./resources/test/fixtures/style/S231.f90:170:3: S231 [*] Missing space in 'endinterface'
    |
168 |       integer, intent(in) :: x
169 |     end function f
170 |   endinterface
    |   ^^^^^^^^^^^^ S231
171 |
172 |   do i = 1, n
    |
    = help: Replace with 'end interface'

ℹ Safe fix
167 167 |     function f(x)
168 168 |       integer, intent(in) :: x
169 169 |     end function f
170     |-  endinterface
    170 |+  end interface
171 171 | 
172 172 |   do i = 1, n
173 173 |     A(i) = real(i)

./resources/test/fixtures/style/S231.f90:178:3: S231 [*] Missing space in 'enddo'
    |
176 |   do_name: do i = 1, n
177 |     A(i) = A(i) + 1
178 |   enddo do_name
    |   ^^^^^ S231
179 |
180 |   where (A > 5.0)
    |
    = help: Replace with 'end do'

ℹ Safe fix
175 175 | 
176 176 |   do_name: do i = 1, n
177 177 |     A(i) = A(i) + 1
178     |-  enddo do_name
    178 |+  end do do_name
179 179 | 
180 180 |   where (A > 5.0)
181 181 |     A = A * 2.0

./resources/test/fixtures/style/S231.f90:182:3: S231 [*] Missing space in 'elsewhere'
    |
180 |   where (A > 5.0)
181 |     A = A * 2.0
182 |   eLseWHere
    |   ^^^^^^^^^ S231
183 |     A = A + 10.0
184 |   endwheRe
    |
    = help: Replace with 'else where'

ℹ Safe fix
179 179 | 
180 180 |   where (A > 5.0)
181 181 |     A = A * 2.0
182     |-  eLseWHere
    182 |+  eLse WHere
183 183 |     A = A + 10.0
184 184 |   endwheRe
185 185 | 

./resources/test/fixtures/style/S231.f90:184:3: S231 [*] Missing space in 'endwhere'
    |
182 |   eLseWHere
183 |     A = A + 10.0
184 |   endwheRe
    |   ^^^^^^^^ S231
185 |
186 |   where (A > 15.0)
    |
    = help: Replace with 'end where'

ℹ Safe fix
181 181 |     A = A * 2.0
182 182 |   eLseWHere
183 183 |     A = A + 10.0
184     |-  endwheRe
    184 |+  end wheRe
185 185 | 
186 186 |   where (A > 15.0)
187 187 |     A = A + 3.0

./resources/test/fixtures/style/S231.f90:194:3: S231 [*] Missing space in 'elseif'
    |
192 |   if (A(1) == 11.0) then
193 |     print *, "foo"
194 |   eLsEIf (A(1) == 12.0) then
    |   ^^^^^^ S231
195 |     print *, "bar"
196 |   else if (A(2) == 12.0) then
    |
    = help: Replace with 'else if'

ℹ Safe fix
191 191 | 
192 192 |   if (A(1) == 11.0) then
193 193 |     print *, "foo"
194     |-  eLsEIf (A(1) == 12.0) then
    194 |+  eLsE If (A(1) == 12.0) then
195 195 |     print *, "bar"
196 196 |   else if (A(2) == 12.0) then
197 197 |     print *, "baz"

./resources/test/fixtures/style/S231.f90:204:3: S231 [*] Missing space in 'endif'
    |
202 |   if (A(1) == 11.0) then
203 |     print *, "foo"
204 |   EndIf
    |   ^^^^^ S231
205 |
206 |   call s1()
    |
    = help: Replace with 'end if'

ℹ Safe fix
201 201 | 
202 202 |   if (A(1) == 11.0) then
203 203 |     print *, "foo"
204     |-  EndIf
    204 |+  End If
205 205 | 
206 206 |   call s1()
207 207 | 

./resources/test/fixtures/style/S231.f90:218:15: S231 [*] Missing space in 'goto'
    |
216 |   10 continue
217 |   i = i + 1
218 |   if (i < 10) goto 10
    |               ^^^^ S231
219 |   if (i < 20) go to 10
    |
    = help: Replace with 'go to'

ℹ Safe fix
215 215 |   i = 1
216 216 |   10 continue
217 217 |   i = i + 1
218     |-  if (i < 10) goto 10
    218 |+  if (i < 10) go to 10
219 219 |   if (i < 20) go to 10
220 220 | 
221 221 | endprogram p

./resources/test/fixtures/style/S231.f90:221:1: S231 [*] Missing space in 'endprogram'
    |
219 |   if (i < 20) go to 10
220 |
221 | endprogram p
    | ^^^^^^^^^^ S231
    |
    = help: Replace with 'end program'

ℹ Safe fix
218 218 |   if (i < 10) goto 10
219 219 |   if (i < 20) go to 10
220 220 | 
221     |-endprogram p
    221 |+end program p
