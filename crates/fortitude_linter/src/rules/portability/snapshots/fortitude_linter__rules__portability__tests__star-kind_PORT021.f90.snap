---
source: fortitude/src/rules/portability/mod.rs
expression: diagnostics
snapshot_kind: text
---
./resources/test/fixtures/portability/PORT021.f90:1:8: PORT021 [*] 'integer*8' uses non-standard syntax
  |
1 | integer*8 function add_if(x, y, z)
  |        ^^ PORT021
2 |   integer(kind=2), intent(in) :: x
3 |   integer *4, intent(in) :: y
  |
  = help: Replace with 'integer(8)'

ℹ Unsafe fix
1   |-integer*8 function add_if(x, y, z)
  1 |+integer(8) function add_if(x, y, z)
2 2 |   integer(kind=2), intent(in) :: x
3 3 |   integer *4, intent(in) :: y
4 4 |   logical*   4, intent(in) :: z

./resources/test/fixtures/portability/PORT021.f90:3:11: PORT021 [*] 'integer*4' uses non-standard syntax
  |
1 | integer*8 function add_if(x, y, z)
2 |   integer(kind=2), intent(in) :: x
3 |   integer *4, intent(in) :: y
  |           ^^ PORT021
4 |   logical*   4, intent(in) :: z
5 |   real    * &
  |
  = help: Replace with 'integer(4)'

ℹ Unsafe fix
1 1 | integer*8 function add_if(x, y, z)
2 2 |   integer(kind=2), intent(in) :: x
3   |-  integer *4, intent(in) :: y
  3 |+  integer(4), intent(in) :: y
4 4 |   logical*   4, intent(in) :: z
5 5 |   real    * &
6 6 |        8 :: t

./resources/test/fixtures/portability/PORT021.f90:4:10: PORT021 [*] 'logical*4' uses non-standard syntax
  |
2 |   integer(kind=2), intent(in) :: x
3 |   integer *4, intent(in) :: y
4 |   logical*   4, intent(in) :: z
  |          ^^^^^ PORT021
5 |   real    * &
6 |        8 :: t
  |
  = help: Replace with 'logical(4)'

ℹ Unsafe fix
1 1 | integer*8 function add_if(x, y, z)
2 2 |   integer(kind=2), intent(in) :: x
3 3 |   integer *4, intent(in) :: y
4   |-  logical*   4, intent(in) :: z
  4 |+  logical(4), intent(in) :: z
5 5 |   real    * &
6 6 |        8 :: t
7 7 | 

./resources/test/fixtures/portability/PORT021.f90:5:11: PORT021 [*] 'real*8' uses non-standard syntax
  |
3 |     integer *4, intent(in) :: y
4 |     logical*   4, intent(in) :: z
5 |     real    * &
  |  ___________^
6 | |        8 :: t
  | |________^ PORT021
7 |
8 |     if (x == 2) then
  |
  = help: Replace with 'real(8)'

ℹ Unsafe fix
2 2 |   integer(kind=2), intent(in) :: x
3 3 |   integer *4, intent(in) :: y
4 4 |   logical*   4, intent(in) :: z
5   |-  real    * &
6   |-       8 :: t
  5 |+  real(8) :: t
7 6 | 
8 7 |   if (x == 2) then
9 8 |     add_if = x + y

./resources/test/fixtures/portability/PORT021.f90:16:8: PORT021 [*] 'real*4' uses non-standard syntax
   |
15 | subroutine complex_mul(x, real)
16 |   real * 4, intent(in) :: x
   |        ^^^ PORT021
17 |   complex  *  8, intent(inout) :: real
18 |   ! This would be a false positive with purely regexp based linting
   |
   = help: Replace with 'real(4)'

ℹ Unsafe fix
13 13 | end function add_if
14 14 | 
15 15 | subroutine complex_mul(x, real)
16    |-  real * 4, intent(in) :: x
   16 |+  real(4), intent(in) :: x
17 17 |   complex  *  8, intent(inout) :: real
18 18 |   ! This would be a false positive with purely regexp based linting
19 19 |   real = real * 8

./resources/test/fixtures/portability/PORT021.f90:17:12: PORT021 [*] 'complex*8' uses non-standard syntax
   |
15 | subroutine complex_mul(x, real)
16 |   real * 4, intent(in) :: x
17 |   complex  *  8, intent(inout) :: real
   |            ^^^^ PORT021
18 |   ! This would be a false positive with purely regexp based linting
19 |   real = real * 8
   |
   = help: Replace with 'complex(8)'

ℹ Unsafe fix
14 14 | 
15 15 | subroutine complex_mul(x, real)
16 16 |   real * 4, intent(in) :: x
17    |-  complex  *  8, intent(inout) :: real
   17 |+  complex(8), intent(inout) :: real
18 18 |   ! This would be a false positive with purely regexp based linting
19 19 |   real = real * 8
20 20 | end subroutine complex_mul
