---
source: crates/fortitude_linter/src/rules/correctness/mod.rs
expression: diagnostics
snapshot_kind: text
---
./resources/test/fixtures/correctness/C001.f90:1:1: C001 [*] module missing 'implicit none'
  |
1 | module my_module
  | ^^^^^^^^^^^^^^^^ C001
2 |   parameter(N = 1)
3 | end module my_module
  |
  = help: Insert `implicit none`

ℹ Unsafe fix
1 1 | module my_module
  2 |+implicit none
2 3 |   parameter(N = 1)
3 4 | end module my_module
4 5 | 

./resources/test/fixtures/correctness/C001.f90:5:1: C001 [*] module missing 'implicit none'
  |
3 | end module my_module
4 |
5 | module safe_fix
  | ^^^^^^^^^^^^^^^ C001
6 |   use, intrinsic :: iso_fortran_env, only: int32
7 |   integer(int32) :: foo
8 | end module safe_fix
  |
  = help: Insert `implicit none`

ℹ Unsafe fix
4 4 | 
5 5 | module safe_fix
6 6 |   use, intrinsic :: iso_fortran_env, only: int32
  7 |+  implicit none
7 8 |   integer(int32) :: foo
8 9 | end module safe_fix
9 10 | 

./resources/test/fixtures/correctness/C001.f90:10:1: C001 [*] program missing 'implicit none'
   |
 8 | end module safe_fix
 9 |
10 | program my_program
   | ^^^^^^^^^^^^^^^^^^ C001
11 |   use, intrinsic :: iso_fortran_env, only: int32
12 |   ! Fix should be applied after next line
13 |   use safe_fix
   |
   = help: Insert `implicit none`

ℹ Unsafe fix
11 11 |   use, intrinsic :: iso_fortran_env, only: int32
12 12 |   ! Fix should be applied after next line
13 13 |   use safe_fix
   14 |+  implicit none
14 15 |   ! Fix should be applied before this line
15 16 |   write(*,*) 42
16 17 | end program my_program
