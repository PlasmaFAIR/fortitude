---
source: crates/fortitude_linter/src/rules/correctness/mod.rs
expression: diagnostics
snapshot_kind: text
---
./resources/test/fixtures/correctness/C001.f90:1:1: C001 [*] module missing 'implicit none'
  |
1 | module my_module
  | ^^^^^^^^^^^^^^^^ C001
2 |   parameter(N = 1)
3 | end module my_module
  |
  = help: Insert `implicit none`

ℹ Unsafe fix
1 1 | module my_module
  2 |+implicit none
2 3 |   parameter(N = 1)
3 4 | end module my_module
4 5 | 

./resources/test/fixtures/correctness/C001.f90:5:1: C001 [*] module missing 'implicit none'
  |
3 | end module my_module
4 |
5 | module safe_fix
  | ^^^^^^^^^^^^^^^ C001
6 |   use, intrinsic :: iso_fortran_env, only: int32
7 |   integer(int32) :: foo
8 | contains
  |
  = help: Insert `implicit none`

ℹ Unsafe fix
4 4 | 
5 5 | module safe_fix
6 6 |   use, intrinsic :: iso_fortran_env, only: int32
  7 |+  implicit none
7 8 |   integer(int32) :: foo
8 9 | contains
9 10 |   integer function double(x)

./resources/test/fixtures/correctness/C001.f90:15:1: C001 [*] program missing 'implicit none'
   |
13 | end module safe_fix
14 |
15 | program my_program
   | ^^^^^^^^^^^^^^^^^^ C001
16 |   use, intrinsic :: iso_fortran_env, only: int32
17 |   ! Fix should be applied after next line
18 |   use safe_fix
   |
   = help: Insert `implicit none`

ℹ Unsafe fix
16 16 |   use, intrinsic :: iso_fortran_env, only: int32
17 17 |   ! Fix should be applied after next line
18 18 |   use safe_fix
   19 |+  implicit none
19 20 |   ! Fix should be applied before this line
20 21 |   write(*,*) 42
21 22 | end program my_program

./resources/test/fixtures/correctness/C001.f90:23:1: C001 [*] subroutine missing 'implicit none'
   |
21 | end program my_program
22 |
23 | subroutine external_sub(x)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ C001
24 |   print*, x
25 | end subroutine external_sub
   |
   = help: Insert `implicit none`

ℹ Unsafe fix
21 21 | end program my_program
22 22 | 
23 23 | subroutine external_sub(x)
   24 |+implicit none
24 25 |   print*, x
25 26 | end subroutine external_sub
