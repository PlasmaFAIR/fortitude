---
source: fortitude/src/rules/modernisation/mod.rs
expression: diagnostics
snapshot_kind: text
---
./resources/test/fixtures/modernisation/MOD021.f90:2:9: MOD021 [*] deprecated relational operator '.gt.', prefer '>' instead
  |
1 | program test
2 |   if (0 .gt. 1) error stop
  |         ^^^^ MOD021
3 |   if (1 .le. 0) error stop
4 |   if (a.eq.b.and.a.ne.b) error stop
  |
  = help: Use '>'

ℹ Safe fix
1 1 | program test
2   |-  if (0 .gt. 1) error stop
  2 |+  if (0 > 1) error stop
3 3 |   if (1 .le. 0) error stop
4 4 |   if (a.eq.b.and.a.ne.b) error stop
5 5 |   if (1 == 2) error stop  ! OK

./resources/test/fixtures/modernisation/MOD021.f90:3:9: MOD021 [*] deprecated relational operator '.le.', prefer '<=' instead
  |
1 | program test
2 |   if (0 .gt. 1) error stop
3 |   if (1 .le. 0) error stop
  |         ^^^^ MOD021
4 |   if (a.eq.b.and.a.ne.b) error stop
5 |   if (1 == 2) error stop  ! OK
  |
  = help: Use '<='

ℹ Safe fix
1 1 | program test
2 2 |   if (0 .gt. 1) error stop
3   |-  if (1 .le. 0) error stop
  3 |+  if (1 <= 0) error stop
4 4 |   if (a.eq.b.and.a.ne.b) error stop
5 5 |   if (1 == 2) error stop  ! OK
6 6 |   if (2 /= 2) error stop  ! OK

./resources/test/fixtures/modernisation/MOD021.f90:4:8: MOD021 [*] deprecated relational operator '.eq.', prefer '==' instead
  |
2 |   if (0 .gt. 1) error stop
3 |   if (1 .le. 0) error stop
4 |   if (a.eq.b.and.a.ne.b) error stop
  |        ^^^^ MOD021
5 |   if (1 == 2) error stop  ! OK
6 |   if (2 /= 2) error stop  ! OK
  |
  = help: Use '=='

ℹ Safe fix
1 1 | program test
2 2 |   if (0 .gt. 1) error stop
3 3 |   if (1 .le. 0) error stop
4   |-  if (a.eq.b.and.a.ne.b) error stop
  4 |+  if (a==b.and.a.ne.b) error stop
5 5 |   if (1 == 2) error stop  ! OK
6 6 |   if (2 /= 2) error stop  ! OK
7 7 | end program test

./resources/test/fixtures/modernisation/MOD021.f90:4:19: MOD021 [*] deprecated relational operator '.ne.', prefer '/=' instead
  |
2 |   if (0 .gt. 1) error stop
3 |   if (1 .le. 0) error stop
4 |   if (a.eq.b.and.a.ne.b) error stop
  |                   ^^^^ MOD021
5 |   if (1 == 2) error stop  ! OK
6 |   if (2 /= 2) error stop  ! OK
  |
  = help: Use '/='

ℹ Safe fix
1 1 | program test
2 2 |   if (0 .gt. 1) error stop
3 3 |   if (1 .le. 0) error stop
4   |-  if (a.eq.b.and.a.ne.b) error stop
  4 |+  if (a.eq.b.and.a/=b) error stop
5 5 |   if (1 == 2) error stop  ! OK
6 6 |   if (2 /= 2) error stop  ! OK
7 7 | end program test
